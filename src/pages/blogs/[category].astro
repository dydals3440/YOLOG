---
import { getCollection } from 'astro:content'

import BaseLayout from '@/layouts/BaseLayout.astro'
import { BLOG_CATEGORIES, type BlogCategory } from '@/consts'
import CategoryList from '@/components/blogs/CategoryList.astro'
import BlogCard from '@/components/blogs/BlogCard.astro'
import YongGlass from '@/components/YongGlass.astro'
import { sortPostsByDate, createCategoryList, filterPostsByCategory, paginateArray } from '@/lib/blog-utils'

export async function getStaticPaths() {
  const allPosts = await getCollection('post')
  const categories = Object.keys(BLOG_CATEGORIES)
    .filter(category => category !== 'ALL')
    .map(category => category.toLowerCase())

  return categories.map(category => {
    const categoryKey = category.toUpperCase() as BlogCategory
    const filteredPosts = filterPostsByCategory(allPosts, categoryKey)
    const sortedPosts = sortPostsByDate(filteredPosts)

    // 첫 번째 페이지만 표시 (5개)
    const POSTS_PER_PAGE = 3
    const { items: paginatedPosts, pagination } = paginateArray(sortedPosts, 1, POSTS_PER_PAGE)

    return {
      params: { category },
      props: {
        posts: paginatedPosts,
        pagination,
        allPosts,
        category,
        totalPostsInCategory: sortedPosts.length
      }
    }
  })
}

const { posts, pagination, allPosts, category, totalPostsInCategory } = Astro.props

// 카테고리 목록 생성
const categories = createCategoryList(allPosts)

// 현재 카테고리 라벨 찾기
const currentCategory = Object.entries(BLOG_CATEGORIES)
  .find(([key]) => key.toLowerCase() === category)?.[1] || category
---

<BaseLayout>
  <div class="container mx-auto max-w-6xl px-4 py-12">
    <h1 class="text-center text-4xl font-bold mb-4">{currentCategory}</h1>
    <p class="text-center text-gray-600 dark:text-gray-400 mb-12">{totalPostsInCategory} posts</p>
    
    <div class="mb-12">
      <CategoryList categories={categories} currentPath={Astro.url.pathname} />
    </div>

    {posts.length > 0 ? (
      <div>
        <div class="grid gap-8 mb-12">
          {posts.map(post => <BlogCard post={post} />)}
        </div>
      </div>
    ) : (
      <div class="mx-auto flex max-w-md flex-col items-center justify-center space-y-6 py-16 text-center">
        <div class="relative">
          <div class="absolute -inset-1 animate-pulse rounded-full bg-gradient-to-r from-purple-100 to-pink-100 opacity-75 blur-xl"></div>
          <YongGlass className="relative h-24 w-24 text-gray-900/80" />
        </div>

        <div class="space-y-2">
          <p class="text-xl font-bold">
            카테고리에 해당하는 게시글이 없습니다
          </p>
          <p class="text-base text-gray-600">
            잠시 기다려주시면 좋은 글로 찾아뵙겠습니다
          </p>
        </div>

        <a 
          href="/" 
          class="group mt-2 inline-flex items-center gap-2 rounded-full bg-gray-50 px-4 py-2 text-sm text-gray-600 transition-colors hover:bg-gray-100"
        >
          <span>메인으로 돌아가기</span>
          <svg 
            class="h-4 w-4 transition-transform group-hover:translate-x-0.5" 
            xmlns="http://www.w3.org/2000/svg" 
            fill="none" 
            viewBox="0 0 24 24" 
            stroke="currentColor"
          >
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
          </svg>
        </a>
      </div>
    )}
  </div>
</BaseLayout>

<style>
  .group:hover .group-hover\:scale-100 {
    transform: scale(1);
  }
</style> 